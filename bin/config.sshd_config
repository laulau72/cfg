#!/bin/ksh
#
##### config.sshd_config
##
## Configure sshd's sshd_config
##
###### Input:
##
## -d ssh_dir	Location of the ssh directory (default: /etc/ssh)
##
###### Ouput:
##
## sshd_config 	Generated with etc/sshd_config-generator and cfg/etc/sshd-settings
##
###### Return code:
##
## *  0:        Ok
## *  1:	Can not find ssh settings file
## * 22:	Usage
##
##---

FACTORY_ROOT=${FACTORY_ROOT:=/usr/local/factory}
export FACTORY_ROOT

. $FACTORY_ROOT/core/functions

prgm=$0
ext=$(date +"%Y%m%d%H%M%S")
fatalcheckid root

function usage {
	loginfo "Usage: $prgm [-d ssh_dir]

	Descrition:
		This script will configure the sshd service.

	Option:
		-d ssh_dir	Location of the ssh directory (default: /etc/ssh)
	"
	exit 22

}

SSHDIR=/etc/ssh
while getopts ":d:" opt
do
        case $opt in
                d)     	SSHDIR=$OPTARG
                        ;;
		*|\?)	usage
                        ;;
        esac
done
export SSHDIR=$SSHDIR

case "$FACTORY_PLATFORM" in
AIX)
	INSTALL=/usr/bin/installbsd
	SSHOWNER=root
	SSHGROUP=system
	;;
Linux)
	INSTALL=/usr/bin/install
	CHKCONFIG=/sbin/chkconfig
	POSSIBLESERVICENAMES="sshd openssh"
	SSHOWNER=root
	SSHGROUP=root
	;;
*)	
        fatalerror 1 "No configuration for this Platform: $FACTORY_PLATFORM"
        ;;
esac


loginfo "Setting up sshd_config"

#
# archive original file
#

if [ -f ${SSHDIR}/sshd_config ]
then
	fatalrunit cp ${SSHDIR}/sshd_config ${SSHDIR}/sshd_config.before-cfg.$ext
fi



settings=$(reverse $(findcfglist $FACTORY_ROOT/cfg/etc/sshd-settings))
if [ $? -ne 0 ]
then
	logerror "Can not find ssh settings file"
	exit 1
fi

loginfo "Configuring ssh using settings from $settings"

sshdconfgen=$(findcfgfile $FACTORY_ROOT/cfg/etc/sshd_config-generator)

logdebug "Generator for ${SSHDIR}/sshd_config is $sshdconfgen"

for setting in $settings; do
	logdebug "Sourcing setting file $setting"
	logfromfile I $setting
	. $setting
done

tmpsshdconf=$(add_temp_files sshd_config)

# logging in runit() will cause log output to be sent to >redirected file
# FACTORY_NOTTY prevents this
export FACTORY_NOTTY=1
fatalrunit . $sshdconfgen > $tmpsshdconf
unset FACTORY_NOTTY

fatalrunit $INSTALL -m 644 -o $SSHOWNER -g $SSHGROUP $tmpsshdconf ${SSHDIR}/sshd_config

loginfo "Refresh sshd daemon"
case "$FACTORY_PLATFORM" in
AIX)
        loginfo "Stop sshd"
        /usr/bin/stopsrc -s sshd
        rc=$?
        if [[ "$rc" != "0" ]]
        then
                fatalerror 2 "Stop sshd failed!"
        fi
        loginfo "Start sshd"
        /usr/bin/startsrc -s sshd
        rc=$?
        if [[ "$rc" != "0" ]]
        then
                fatalerror 2 "Start sshd failed!"
        fi
        ;;
Linux)
	for servicename in $POSSIBLESERVICENAMES; do
		if [ -x /etc/init.d/$servicename ]; then
			fatalrunit $CHKCONFIG $servicename on
			fatalrunit /etc/init.d/$servicename restart
		fi
	done
	;;
*)
	logwarn "Refresh sshd daemon not implemented for $FACTORY_PLATFORM"
	;;
esac
	
remove_temp_files

